;
; PE13_EX2.asm
;
; Created: 9/19/2023 11:25:33 AM
; Author : tuan minh
;


; Replace with your application code
.ORG 0

.EQU LCD_PORT = PORTA ; LCD DATA PORT
.EQU LCD_DDR = DDRA  ; LCD DATA DDR
.EQU LCD_PIN = PINA  ; LCD DATA PIN
.EQU LED_PORT = PORTB ; LED DATA PORT
.EQU LED_PIN = PINB ; LED DATA PIN
.EQU LED_DDR = DDRB ; LED DATA DDR
.EQU LCD_RS = 0		  ; LCD RS
.EQU LCD_RW = 1       ; LCD RW
.EQU LCD_EN = 2       ; LCD EN
.EQU BUTTON = 0 ; BUTTON INPUT PORT

; INITIALIZE STACK POINTER 
		LDI R21, LOW(RAMEND)
		OUT SPL, R21
		LDI R21, HIGH(RAMEND)
		OUT SPH, R21

		LDI R16, 0xFF
		OUT LED_DDR, R16 ; SET PORTB AS OUTPUT TO LEDBAR
		OUT PORTC, R16 ; PULL-UP
		LDI R16, 0x00
		OUT DDRC, R16 ; SET PORTC AS INPUT FROM BUTTON 
		
RESET:	
		LDI R25, 48 ; R25 IS HUNDREDS PLACE DIGIT IN ASCII
		LDI R26, 48 ; R26 IS TENS PLACE DIGIT IN ASCII 
		LDI R27, 48 ; R27 IS ONES PLACE DIGIT IN ASCII
		CLR R19
		LDI R16, 0x14
		CALL LCD_ON ; INITIALIZE LCD
		CALL STRING_OUT
SAMPLE:	
		SBIC PINC, BUTTON ; IF PRESS, GO TO DEBOUNCE 20ms
		RJMP SAMPLE ; IF NOT PRESS, RESAMPLE BUTTON
		CALL DELAY_20ms
		SBIC PINC, BUTTON ; SAMPLE AGAIN
		RJMP SAMPLE 
		INC R19 ; PRESS COUNTER
		OUT LED_PORT, R19 ; OUTPUT RESULT TO LEDBAR

; R25, R26, R27 WILL BE LCD COUNT DISPLAY FOR 3 DIGITS (MAX = 255)
		CPI R27, 57 ; CHECK IF R27 = 9 IN ASCII
		BREQ TENS
		INC R27
		RJMP NEXT ; PASS THE COMPARE BELOW

TENS:
		CPI R26, 57 ; CHECK IF R26 = 9 IN ASCII
		BREQ HUNDREDS
		LDI R27, 48 
		INC R26
		RJMP NEXT

HUNDREDS:
		LDI R27, 48
		LDI R26, 48
		INC R25

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;CONDITION TO CHECK IF VALUE HAS REACHED MAX COUNT ON LEDBAR OF 255
NEXT:
		CPI R27, 54 ; R27 = 6?
		BRNE DISPLAY
		CPI R26, 53 ; R26 = 5?
		BRNE DISPLAY
		CPI R25, 50 ; R25 = 2?
		BRNE DISPLAY
		JMP RESET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DISPLAY: 
		LDI R16, 0x89 ; 
		CALL CMDWRITE
		MOV R16, R25 ; DISPLAY HUNDREDS DIGIT
		CALL DATAWRITE
		MOV R16, R26 ; DISPLAY TENS DIGIT
		CALL DATAWRITE
		MOV R16, R27 ; DISPLAY ONES DIGIT
		CALL DATAWRITE
		JMP SAMPLE
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
LCD_ON:
		LDI R16, 0b11110111
		OUT LCD_DDR, R16 ; SET OUTPUT PORT TO LCD (DATA PA4 - PA7, RS = PA0, RW = PA1, EN = PA2)
		CALL DELAY_20ms ; WAIT FOR POWER UP

		LDI R16, 0x02 ; RETURN HOME
		CALL CMDWRITE
		LDI R16, 0x28 ; FUCNTION SET: 4-BIT, 2 LINES, 5x7 DOTS
		CALL CMDWRITE
		LDI R16, 0x0E ; DISPLAY ON, CURSOR ON
		CALL CMDWRITE
		LDI R16, 0x01 ; CLEAR DISPLAY SCREEN
		CALL CMDWRITE
		LDI R16, 0x80 ; FORCE CURSOR TO BEGIN OF 1ST ROW
		CALL CMDWRITE
		RET

STRING_OUT:
		LDI R31, HIGH(LAB_MSG<<1)
		LDI R30, LOW(LAB_MSG<<1)
STRING: 
		LPM R16, Z+
		CPI R16, 0
		BREQ DONE
		CALL DATAWRITE
		RJMP STRING
DONE:
		RET

LAB_MSG: .DB "PRESSES: ", 0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
CMDWRITE:
		CALL DELAY_20ms
		MOV R18,R16
		ANDI R18,0xF0 ; MASK LOW NIBBLE
		OUT LCD_PORT, R18    ; SEND HIGH NIBBLE
		SBI LCD_PORT, LCD_EN ; EN = 1 HIGH PULSE
		CALL SDELAY          ; EXTEND EN PULSE
		CBI LCD_PORT, LCD_EN ; EN=0 FOR H-to-L PULSE
		CALL DELAY_100us     

		SWAP R16
		ANDI R16, 0xF0 ; MASK HIGH NIBBLE
		OUT LCD_PORT, R16    ; SEND LOW NIBBLE
		SBI LCD_PORT, LCD_EN ; EN = 1 FOR HIGH PULSE
		CALL SDELAY          ; EXTEND EN PULSE
		CBI LCD_PORT, LCD_EN ; EN=0 FOR H-to-L PULSE
		CALL DELAY_100us
		RET
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DATAWRITE:
		CALL DELAY_20ms
		MOV R18,R16
		ANDI R18,0xF0 ; MASK LOW NIBBLE
		OUT LCD_PORT, R18    ; SEND HIGH NIBBLE
		SBI LCD_PORT, LCD_RS ; RS = 1 TO DATA
		;CBI LCD_PORT, LCD_RW ; RW = 0 TO WRITE
		SBI LCD_PORT, LCD_EN ; EN = 1 HIGH PULSE
		CALL SDELAY          ; EXTEND EN PULSE
		CBI LCD_PORT, LCD_EN ; EN=0 FOR H-to-L PULSE
		CALL DELAY_100us 

		SWAP R16
		ANDI R16, 0xF0 ; MASK HIGH NIBBLE
		OUT LCD_PORT, R16    ; SEND LOW NIBBLE
		SBI LCD_PORT, LCD_RS ; RS = 1 TO DATA
		;CBI LCD_PORT, LCD_RW ; RW = 0 TO write
		SBI LCD_PORT, LCD_EN ; EN = 1 HIGH PULSE
		CALL SDELAY          ; EXTEND EN PULSE
		CBI LCD_PORT, LCD_EN ; EN=0 FOR H-to-L PULSE
		CALL DELAY_100us   
		RET 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
SDELAY:
		NOP
		NOP
		RET
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DELAY_100us:
		PUSH R17
		LDI R17,100
DR0: 
		CALL SDELAY
		DEC R17
		BRNE DR0
		POP R17
		RET
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DELAY_2ms:
		PUSH R17
		LDI R17,20
LDR0: 
		CALL DELAY_100us
		DEC R17
		BRNE LDR0
		POP R17
		RET
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DELAY_10ms:
		PUSH R17
		LDI R17, 5
BOUNCER:
		CALL DELAY_2ms
		DEC R17
		BRNE BOUNCER
		POP R17
		RET
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DELAY_20ms:
		PUSH R17
		LDI R17, 10
POWERUP:
		CALL DELAY_2ms
		DEC R17
		BRNE POWERUP
		POP R17
		RET
