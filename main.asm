;
; PE13_EX3.asm
;
; Created: 9/25/2023 9:08:14 PM
; Author : tuan minh
;


; Replace with your application code

.ORG 0
RJMP RESET_HANDLER
.EQU LCD_PORT = PORTA ; LCD DATA PORT
.EQU LCD_DDR = DDRA  ; LCD DATA DDR
.EQU LCD_PIN = PINA  ; LCD DATA PIN
.EQU LED_PORT = PORTB ; LED DATA PORT
.EQU LED_PIN = PINB ; LED DATA PIN
.EQU LED_DDR = DDRB ; LED DATA DDR
.EQU KEY_PORT = PORTD ; KEY DATA PORT
.EQU KEY_PIN = PIND ; KEY DATA PIN
.EQU KEY_DDR = DDRD ; KEY DATA DDR
.EQU LCD_RS = 0		  ; LCD RS
.EQU LCD_RW = 1       ; LCD RW
.EQU LCD_EN = 2       ; LCD EN

; INITIALIZE STACK POINTER 
RESET_HANDLER:
		LDI R21, LOW(RAMEND)
		OUT SPL, R21
		LDI R21, HIGH(RAMEND)
		OUT SPH, R21

		LDI R16, 0xFF
		OUT LED_DDR, R16 ; SET PORTB AS OUTPUT TO LEDBAR
		LDI R16, 0x0F
		OUT KEY_DDR, R16 ; SET PC0-3 OUTPUT COLUMN, PC4-7 INPUT ROW 
		LDI R16, 0xF0
		OUT KEY_PORT, R16 ; PULL-UP
		CALL LCD_ON
		CALL STRING_OUT

MAIN:
		CALL SCANKEY
		LDI R16, 0xC0 ; FORCE CURSON TO BEGIN 2ND ROW
		CALL CMDWRITE
		CPI R23, 0xFF
		BREQ NOKEY
		CPI R23, 10
		BRLO DIGIT
		LDI R16, 55
		ADD R16, R23
		RJMP DISPLAY
DIGIT:
		LDI R16, 48 
		ADD R16, R23

DISPLAY:
		CALL DATAWRITE
NOKEY:	
		LDI R16, 32 ; SPACE
		CALL DATAWRITE
		LDI R16, 0xC0 ; FORCE CURSON TO BEGIN 2ND ROW
		CALL CMDWRITE
		OUT LED_PORT, R23
		RJMP MAIN

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
SCANKEY:
		LDI R20, 0x0F
		OUT KEY_PORT, R20
		LDI R22, 0b11110111
		LDI R23, 0
		LDI R24, 3

KEYPAD_SCAN_LOOP:
		OUT KEY_PORT, R22
		CALL DELAY_10ms
		SBIC KEY_PIN, 4
		RJMP KEYPAD_SCAN_CHECK_COL_2
		RJMP KEYPAD_SCAN_FOUND

KEYPAD_SCAN_CHECK_COL_2:
		SBIC KEY_PIN, 5
		RJMP KEYPAD_SCAN_CHECK_COL_3
		LDI R23, 1
		RJMP KEYPAD_SCAN_FOUND

KEYPAD_SCAN_CHECK_COL_3:
		SBIC KEY_PIN, 6
		RJMP KEYPAD_SCAN_CHECK_COL_4
		LDI R23, 2
		RJMP KEYPAD_SCAN_FOUND

KEYPAD_SCAN_CHECK_COL_4:
		SBIC KEY_PIN, 7
		RJMP KEYPAD_SCAN_NEXT_ROW
		LDI R23, 3
		RJMP KEYPAD_SCAN_FOUND

KEYPAD_SCAN_NEXT_ROW:
		CPI R24, 0
		BREQ KEYPAD_SCAN_NOT_FOUND
		ROR R22
		DEC R24
		RJMP KEYPAD_SCAN_LOOP

KEYPAD_SCAN_FOUND:
		LSL R23
		LSL R23
		ADD R23, R24
		RET

KEYPAD_SCAN_NOT_FOUND:
		LDI R23, 0xFF
		RET
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
LCD_ON:
		LDI R16, 0b11110111
		OUT LCD_DDR, R16 ; SET OUTPUT PORT TO LCD (DATA PA4 - PA7, RS = PA0, RW = PA1, EN = PA2)
		CALL DELAY_20ms ; WAIT FOR POWER UP

		LDI R16, 0x02 ; RETURN HOME
		CALL CMDWRITE
		LDI R16, 0x28 ; FUCNTION SET: 4-BIT, 2 LINES, 5x7 DOTS
		CALL CMDWRITE
		LDI R16, 0x0E ; DISPLAY ON, CURSOR ON
		CALL CMDWRITE
		LDI R16, 0x01 ; CLEAR DISPLAY SCREEN
		CALL CMDWRITE
		LDI R16, 0x80 ; FORCE CURSOR TO BEGIN OF 1ST ROW
		CALL CMDWRITE
		RET
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
STRING_OUT:
		LDI R31, HIGH(LAB_MSG<<1)
		LDI R30, LOW(LAB_MSG<<1)
STRING: 
		LPM R16, Z+
		CPI R16, 0
		BREQ DONE
		CALL DATAWRITE
		RJMP STRING
DONE:
		RET
LAB_MSG: .DB "KEY PRESSED: ", 0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
CMDWRITE:
		CALL DELAY_20ms
		MOV R18,R16
		ANDI R18,0xF0 ; MASK LOW NIBBLE
		OUT LCD_PORT, R18    ; SEND HIGH NIBBLE
		SBI LCD_PORT, LCD_EN ; EN = 1 HIGH PULSE
		CALL SDELAY          ; EXTEND EN PULSE
		CBI LCD_PORT, LCD_EN ; EN=0 FOR H-to-L PULSE
		CALL DELAY_100us     

		SWAP R16
		ANDI R16, 0xF0 ; MASK HIGH NIBBLE
		OUT LCD_PORT, R16    ; SEND LOW NIBBLE
		SBI LCD_PORT, LCD_EN ; EN = 1 FOR HIGH PULSE
		CALL SDELAY          ; EXTEND EN PULSE
		CBI LCD_PORT, LCD_EN ; EN=0 FOR H-to-L PULSE
		CALL DELAY_100us
		RET
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DATAWRITE:
		CALL DELAY_20ms
		MOV R18,R16
		ANDI R18,0xF0 ; MASK LOW NIBBLE
		OUT LCD_PORT, R18    ; SEND HIGH NIBBLE
		SBI LCD_PORT, LCD_RS ; RS = 1 TO DATA
		;CBI LCD_PORT, LCD_RW ; RW = 0 TO WRITE
		SBI LCD_PORT, LCD_EN ; EN = 1 HIGH PULSE
		CALL SDELAY          ; EXTEND EN PULSE
		CBI LCD_PORT, LCD_EN ; EN=0 FOR H-to-L PULSE
		CALL DELAY_100us 

		SWAP R16
		ANDI R16, 0xF0 ; MASK HIGH NIBBLE
		OUT LCD_PORT, R16    ; SEND LOW NIBBLE
		SBI LCD_PORT, LCD_RS ; RS = 1 TO DATA
		;CBI LCD_PORT, LCD_RW ; RW = 0 TO write
		SBI LCD_PORT, LCD_EN ; EN = 1 HIGH PULSE
		CALL SDELAY          ; EXTEND EN PULSE
		CBI LCD_PORT, LCD_EN ; EN=0 FOR H-to-L PULSE
		CALL DELAY_100us   
		RET 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
SDELAY:
		NOP
		NOP
		RET
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DELAY_100us:
		PUSH R17
		LDI R17,100
DR0: 
		CALL SDELAY
		DEC R17
		BRNE DR0
		POP R17
		RET
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DELAY_2ms:
		PUSH R17
		LDI R17,20
LDR0: 
		CALL DELAY_100us
		DEC R17
		BRNE LDR0
		POP R17
		RET
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DELAY_10ms:
		PUSH R17
		LDI R17, 5
BOUNCER:
		CALL DELAY_2ms
		DEC R17
		BRNE BOUNCER
		POP R17
		RET
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DELAY_20ms:
		PUSH R17
		LDI R17, 10
POWERUP:
		CALL DELAY_2ms
		DEC R17
		BRNE POWERUP
		POP R17
		RET
